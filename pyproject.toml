[build-system]
requires = ["maturin>=1.8,<2.0"]
build-backend = "maturin"

[project]
name = "djc_core"
version = "1.1.0"
requires-python = ">=3.8, <4.0"
description = "HTML parser used by django-components written in Rust."
keywords = ["django", "components", "html"]
readme = "README.md"
authors = [
    {name = "Juro Oravec", email = "juraj.oravec.josefson@gmail.com"},
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
license = {text = "MIT"}

# See https://docs.pypi.org/project_metadata/#icons
[project.urls]
Homepage = "https://github.com/django-components/djc-core/"
Changelog = "https://github.com/django-components/djc-core/blob/main/CHANGELOG.md"
Issues = "https://github.com/django-components/djc-core/issues"
Donate = "https://github.com/sponsors/EmilStenstrom"

[tool.maturin]
# This is the crate that will be exposed to Python
manifest-path = "crates/djc-core/Cargo.toml"
features = ["pyo3/extension-module"]
include = [
    "djc_core/__init__.py",
    "djc_core/__init__.pyi",
    "djc_core/py.typed",
]

[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | activate
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 3
include_trailing_comma = "True"
known_first_party = "djc_core"

[tool.flake8]
ignore = ['E302', 'W503']
max-line-length = 119
exclude = [
  'migrations',
  '__pycache__',
  'manage.py',
  'settings.py',
  'env',
  '.env',
  '.venv',
  '.tox',
  'build',
]

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
exclude = [
    'build',
]

[[tool.mypy.overrides]]
module = "djc_core.*"
disallow_untyped_defs = true


[tool.pytest.ini_options]
testpaths = [
    "tests"
]
